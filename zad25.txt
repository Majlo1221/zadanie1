1. określanie wartości danego obiektu
a) nazwa_obiektu.nazwa_właściwości="tekst"; → dla właściwości typu tekstowego
b) nazwa_obiektu.nazwa_właściwości=liczba; → dla właściwości typu liczbowego



2. odwoływanie do pól
Do właściwości i metod można się odwołać podobnie jak do zwykłych zmiennych 
i funkcji, trzeba tylko przed ich nazwą umieścić nazwę obiektu, którego są elementami 
(np. zmienną, która przechowuje dany obiekt), i kropkę.
np. console.log(samochod1.kolor); → wyświetla kolor obiektu samochod



3. cechy charatkerystyczne konstruktora

• jest wywoływany (uruchamiany) automatycznie w chwili tworzenia obiektu danej klasy - na 
rzecz tego obiektu,
• nazywa się tak samo jak klasa,
• nie zwraca żadnej wartości ,
• może przyjmować argumenty - tak jak zwykła funkcja czy metoda, aby następnie powołać do 
życia obiekt za pomocą operatora new.



4. Konstruowanie obiektu na podstawie przykładu -> 3 pola 1 metoda 
var osoba_1 =
{
nazwisko : ‘Kowalski’,
imie :’Jan’,
zawod :’piekarz’,
wyświetl :function ()
{
Document.write(this.nazwisko + ‘ ‘ + this.imie)
}
}



5. Znaczenie słowa this. Jak oddzielamy pola oraz metody?

var osoba_1 =
{
nazwisko : ‘Kowalski’,
imie :’Jan’,
zawod :’piekarz’,
wyświetl :function ()
{
Document.write(this.nazwisko + ‘ ‘ + this.imie)
}
}



6. Konstruktor w JS na podstawie przykładu wraz z opisem.

Zostanie utworzony konstruktor o nazwie klient z właściwościami nazwisko, imie, zawod oraz 
metodą wypisz(). Właściwościom obiektu zostały przypisane wartości parametrów. Użyte słowo 
kluczowe this odnosi się do aktualnego obiektu i pozwala na przypisanie wartości parametru do 
odpowiedniego pola tego obiektu.
function klient(nazwisko_k,imie_k,zawod_k)
{
this.nazwisko=nazwisko_k;
this.imie=imie_k;
this.zawod=zawod_k;
wypisz = function ()
 {
 alert(this.nazwisko + ' ' + this.imie)
 }
}



7. Znaczenie słowa kluczowego New wraz z przykładem.

Do utworzenia nowego obiektu na podstawie konstruktora stosowane jest słowo kluczowe new.
Przykład
var osoba1 = new klient('Kowalski', 'Jan', 'kierowca');
var osoba2 = new klient('Nowak', 'Anna', 'sekretarka');
Powstały dwa nowe obiekty osoba1 i osoba2 należące do klasy klient.





8. Znaczenie słowa kluczowego prototype wraz z przykładem i opisem

Do definowania metod i właściwości dla obiektu jest wykorzystana właściwości prototype.
Przykład
function klient()
{
this.nazwisko='Bielski';
this.imie='Paweł';
}
klient.prototype.pisz_dane = function ()
 {
 document.write(this.nazwisko + ' ' + this.imie)
 }
klient.prototype.zawod = 'kierowca';
var osoba1 = new klient();
osoba1.pisz_dane();




